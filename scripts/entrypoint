#!/bin/bash

repeat() { while :; sleep 3; do $@ && return; done }

# setup configuration
if [ -f "/home/lotus_user/config.toml" ]; then
    if [ ! -d /home/lotus_user/.lotus ]; then
	    mkdir /home/lotus_user/.lotus && \
      cp /home/lotus_user/config.toml /home/lotus_user/.lotus/config.toml
    else
      cp /home/lotus_user/config.toml /home/lotus_user/.lotus/config.toml
    fi
fi

# make sure key/token permissions are correct
if [ -d /home/lotus_user/.lotus/keystore ]; then
    chmod -f 600 /home/lotus_user/.lotus/keystore/*
fi
if [ -f /home/lotus_user/.lotus/token ]; then
    chmod -f 600 /home/lotus_user/.lotus/token
fi

while getopts sdhcinf option
do
    case "${option}" in
        s) SYNC=true;;
        d) DAEMON=true;;
	h) DAEMONHEAP=true;;
        c) CHAINWATCH=true;;
        i) IMPORT=true;;
        n) IMPORT_SNAPSHOT=true;;
	f) IMPORT_SNAPSHOT_FROM_IPFS=true;;
    esac
done

if [ "$IMPORT" = true ] ; then
    echo "Starting import wait"
    CHAIN_CAR="/chain/chain.car"
    if [ -f "$CHAIN_CAR" ] && [ ! -e "/home/lotus_user/.lotus/datastore" ]; then
      /usr/local/bin/lotus daemon --halt-after-import --import-chain "$CHAIN_CAR"
      touch /home/lotus_user/.lotus/import-complete
    fi
fi

if [ "$IMPORT_SNAPSHOT_FROM_IPFS" = true ] ; then
    echo "Fetching IPFS CID..."
    CID=$(curl $SNAPSHOT_CID)
    echo "Fetched. CID is $CID"
    SNAPSHOTURL="$IPFS_GW/$CID"
    echo "Full URL to snapshot is $SNAPSHOTURL"
    IMPORT_SNAPSHOT=true
fi

if [ "$IMPORT_SNAPSHOT" = true ] ; then
    echo "Starting import wait"
    if [ ! -e "/home/lotus_user/.lotus/datastore" ]; then
      /usr/local/bin/lotus daemon --halt-after-import --import-snapshot $SNAPSHOTURL
      touch /home/lotus_user/.lotus/import-complete
      else
        rm -fr /home/lotus_user/.lotus/datastore/chain/*
        /usr/local/bin/lotus daemon --halt-after-import --import-snapshot $SNAPSHOTURL
        touch /home/lotus_user/.lotus/import-complete
    fi
fi

if [ "$SYNC" = true ] ; then
    echo "Starting sync wait"
    # Start the daemon process and put it in the background
    /usr/local/bin/lotus daemon &
    # Run the sync process until it dies
    repeat /usr/local/bin/lotus sync wait
fi

if [ "$CHAINWATCH" = true ] ; then
    echo "Starting chainwatch"
    # Start the daemon process and put it in the background
    /usr/local/bin/lotus daemon &
    # wait until we are sure daemon is up (chainwatch will fail if daemon is not running and return 0 even when failing so repeat is not working)
    sleep 120
    # Start the chainwatch process
    repeat chainwatch run
fi

if [ "$SHEDEXPORT" = true ] ; then
    while true; do
    echo "Exporting state"
    /usr/local/bin/lotus-shed export --skip-old-msgs --recent-stateroots=900 $SHEDEXPORTPATH
    timeout $SHEDEXPORTPERIOD /usr/local/bin/lotus daemon
    done
fi

if [ "$DAEMONHEAP" = true ] ; then
    export LOTUS_MAX_HEAP=$LOTUS_MAX_HEAP
    echo "Starting daemon"
    # Start the daemon process
    /usr/local/bin/lotus daemon
fi

if [ "$DAEMON" = true ] ; then
    echo "Starting daemon"
    # Start the daemon process
    /usr/local/bin/lotus daemon
fi
